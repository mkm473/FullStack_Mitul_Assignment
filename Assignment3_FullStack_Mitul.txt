Assignment-3 SmartBridge Full Stack 
Name: Mitul Modh
Registration no.: 22BCE10491
Email: mitulkalpeshkumarmodh2022@vitbhopal.ac.in


Q1. Write a React component called TextUpdater with an input field. Use the useState hook to update and display the text as the user types.
Code:
import { useState } from "react";

const TextUpdater = () => {
  const [text, setText] = useState("");

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4">
      <h2 className="text-xl font-semibold mb-4">Live Text Updater</h2>
      <input
        type="text"
        placeholder="Type something..."
        className="border p-2 rounded-lg w-64 focus:outline-none focus:ring-2 focus:ring-blue-500"
        value={text}
        onChange={(e) => setText(e.target.value)}
      />
      <p className="mt-4 text-lg text-gray-700">You typed: {text}</p>
    </div>
  );
};

export default TextUpdater;


Q2. Create a React form with a text input and a submit button.  When submitted, log the input value to the console.
Code:
import { useState } from "react";

const SimpleForm = () => {
  const [inputValue, setInputValue] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault(); // Prevent page reload
    console.log("Submitted Value:", inputValue);
    setInputValue(""); // Clear input field after submission
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4">
      <h2 className="text-xl font-semibold mb-4">React Form</h2>
      <form onSubmit={handleSubmit} className="flex flex-col items-center">
        <input
          type="text"
          placeholder="Enter text..."
          className="border p-2 rounded-lg w-64 focus:outline-none focus:ring-2 focus:ring-blue-500"
          value={inputValue}
          onChange={(e) => setInputValue(e.target.value)}
        />
        <button
          type="submit"
          className="mt-4 bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition"
        >
          Submit
        </button>
      </form>
    </div>
  );
};

export default SimpleForm;


Q3. Build a UserCard component that takes name and email  as props and displays them inside a styled card using Tailwind CSS.
Code:
const UserCard = ({ name, email }) => {
  return (
    <div className="bg-white shadow-lg rounded-lg p-6 w-80 text-center border border-gray-200">
      <h2 className="text-xl font-semibold text-gray-800">{name}</h2>
      <p className="text-gray-600">{email}</p>
    </div>
  );
};

// Example usage of UserCard component
const App = () => {
  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4">
      <UserCard name="John Doe" email="johndoe@example.com" />
      <UserCard name="Jane Smith" email="janesmith@example.com" />
    </div>
  );
};

export default App;


Q4. Create a Button component with Tailwind CSS that has a blue background, white text, rounded corners, and a hover effect that darkens the button. Additionally, add a click event that logs "Button clicked!" to the console.
Code:
const Button = ({ text }) => {
  const handleClick = () => {
    console.log("Button clicked!");
  };

  return (
    <button
      onClick={handleClick}
      className="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition"
    >
      {text}
    </button>
  );
};

// Example usage of Button component
const App = () => {
  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4">
      <Button text="Click Me" />
    </div>
  );
};

export default App;


Q5. Develop a LoginForm component with email and password fields using useState for form handling and Tailwind CSS for styling. Display an alert with the entered details when submitted.
Code:
import { useState } from "react";

const LoginForm = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();
    alert(`Email: ${email}\nPassword: ${password}`);
    setEmail("");
    setPassword("");
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4">
      <h2 className="text-2xl font-semibold mb-4">Login Form</h2>
      <form onSubmit={handleSubmit} className="bg-white p-6 rounded-lg shadow-md w-80">
        <div className="mb-4">
          <label className="block text-gray-700 text-sm font-bold mb-2">Email</label>
          <input
            type="email"
            className="w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            placeholder="Enter your email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
          />
        </div>
        <div className="mb-4">
          <label className="block text-gray-700 text-sm font-bold mb-2">Password</label>
          <input
            type="password"
            className="w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            placeholder="Enter your password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            required
          />
        </div>
        <button
          type="submit"
          className="w-full bg-blue-500 text-white py-2 rounded-lg hover:bg-blue-600 transition"
        >
          Login
        </button>
      </form>
    </div>
  );
};

export default LoginForm;
